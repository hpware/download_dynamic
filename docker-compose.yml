services:
  # REQUIRED
  app:
    image: ghcr.io/hpware/download_dynamic:latest
    environment:
      POSTGRES_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-changeme}@postgres:5432/${POSTGRES_DB:-downloads}
      # OPTIONAL CAPTCHA SUPPORT, PLEASE ADD YOUR CF TURNSTILE KEY.
      ENABLE_CAPTCHA: ${ENABLE_CAPTCHA:-false}
      CF_TURNSTILE_:
    volumes:
      - "./data:/app/data"
      # BYO HTML INDEX FILE
      #- "./index.html:/app/html/index.html"
    depends_on:
      postgres:
        condition: service_healthy
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-downloads}
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-downloads}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
  # OPTIONAL (RECOMMENDED): ANUBIS PROTECTION
  # PLEASE PULL DOWN THE anubis_botPolicy.yaml file from the repo, and rename it to botPolicy.yaml.
  anubis:
    image: ghcr.io/techarohq/anubis:latest
    environment:
      BIND: ":8080"
      DIFFICULTY: "4"
      METRICS_BIND: ":9090"
      SERVE_ROBOTS_TXT: "true"
      TARGET: "http://app:3000"
      POLICY_FNAME: "/data/cfg/botPolicy.yaml"
      OG_PASSTHROUGH: "true"
      OG_EXPIRY_TIME: "24h"
    # IF YOU ARE USING CF ZERO TRUST, YOU CAN DELETE THE PORTS PART OF THE CODE
    ports: # HERE
      - <<YOUR_PORT_HERE>>:8080 # AND HERE
    volumes:
      - "./botPolicy.yaml:/data/cfg/botPolicy.yaml"
    depends_on:
      app:
        condition: "service_started"
  # OPTIONAL: CLOUDFLARE ZERO TRUST
  # PLEASE USE `echo "CLOUDFLARED_TOKEN=YOUR_CLOUDFLARE_TUNNEL_SECRET" >> ./.env` to import your tunnel secret.
  # ON THE DASHBOARD, CF WILL ASK YOU FOR THE URL, ENTER ANUBIS:8080 IF YOU HAVE ANUBIS, IF YOU DON'T, ENTER APP:3000
  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: always
    command: tunnel --no-autoupdate run --token ${CLOUDFLARED_TOKEN}
